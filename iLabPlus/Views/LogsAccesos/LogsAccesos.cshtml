@model IEnumerable<iLabPlus.Models.BDiLabPlus.Logs_Accesos>

@{
    ViewBag.Title = "Accesos";


    var actions = ViewBag.Actions;

}



<div class="row wrapper page-heading border-bottom white-bg ">
    <div class="col-3" style="padding-left:0;">
        <h3>Logs Accesos</h3>
    </div>

    <div class="col-9 page_heading_func">


        <p id="gridSearch" style="width:300px;"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></p>



        <div class="btn-group ">
            <button type="button" class="btn btn-default  dropdown-toggle " data-toggle="dropdown">
                <i class="far fa-fw fa-ellipsis-v"></i>
            </button>
            <ul class="dropdown-menu dropdown-menu-right ">

                <li><a data-action="import" data-key="clientes"><i class="fal fa-fw fa-cloud-upload"></i> &nbsp;&nbsp;&nbsp;Importar Divisas</a></li>
                <li role="separator" class="divider"></li>
                <li><a class="btnexportst" data-output="excel" data-esort="0-stringasc"><i class="fal fa-fw fa-share-square"></i> &nbsp;&nbsp;&nbsp;Exportar Excel</a></li>
                <li><a class="btnexportst" data-output="pdf" data-esort="0-stringasc"><i class="fal fa-fw fa-file-pdf"></i> &nbsp;&nbsp;&nbsp;Exportar PDF</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="btnexportst" data-output="pdf" data-esort="0-stringasc" onclick="BtnResetConfigGrid()"><i class="fal fa-fw fa-sd-card"></i> &nbsp;&nbsp;&nbsp;Reiniciar configuración grid</a></li>
            </ul>
        </div>

    </div>

</div>

<div class="row wrapper wrapper-content  ">
    <div class="ibox-content">

        @(Html.C1().FlexGrid()
                        .Id("gridLogsAccesos")
                        //.AutoGenerateColumns(true)
                        .AlternatingRowStep(0)
                        .AllowDragging(C1.Web.Mvc.Grid.AllowDragging.Columns)
                        .AllowPinning(true)
                        .AutoSizeMode(AutoSizeMode.Both)
                        .AutoScroll(false)
                        .AutoSearch(true)
                        .CssClass("flexgrid GridEvents")
                        .DefaultRowSize(27)
                        .Filterable(f => {
                            f.DefaultFilterType(FilterType.Both);
                            f.Id("theGridFilter");
                        })
                        .HeadersVisibility(HeadersVisibility.Column)
                        //.IsDisabled(true)
                        .IsReadOnly(true)
                        .SelectionMode(C1.Web.Mvc.Grid.SelectionMode.Row)
                        //.ShowColumnFooters(true)
                        .SortingType(C1.Web.Mvc.Grid.AllowSorting.SingleColumn)
                        .Bind(Model)
                        .AutoGenerateColumns(false)
                        //.FrozenColumns(2)
                        @*.OrderBy("Fecha")*@
                        .FrozenColumns((int)@ViewBag.ColumnsPinnedUser)
                        .ColumnLayout((string)@ViewBag.ColumnsLayoutUser)
                        .Columns(col =>
                        {
                            col.Add(c => c.Binding("Guid").Header("Guid").Width("100").Visible(false));

                            col.Add(c => c.Binding("IsoFecAlt").Header("Fecha").Width("160").Format("dd-MM-yyyy HH:mm:ss"));

                            col.Add(c => c.Binding("IpPublica").Header("Ip").Width("140"));

                            col.Add(c => c.Binding("IsoUser").Header("Usuario").Width("200"));
                            col.Add(c => c.Binding("UserNombre").Header("Usuario Nombre").Width("200"));

                            

                            col.Add(c => c.Binding("Recurso").Header("Recurso").Width("250"));
                            col.Add(c => c.Binding("Dispositivo").Header("Dispositivo").Width("200*"));
                            col.Add(c => c.Binding("Sistema").Header("Sistema").Width("300"));
                            

                        })
                        )

                        @(Html.C1().FlexGridSearch("#gridSearch")
                            .Grid("gridLogsAccesos")
                            .Delay(50)
                            .CssMatch("underline-match")
                            .Placeholder(string.Format("{0}", Html.Raw("Buscar...")))
                            )

    </div>
</div>



<script>

    $(document).ready(function () {



    });

    var theGridCus = wijmo.Control.getControl("#gridLogsAccesos");
    if (theGridCus) {
        theGridCus.select(-1, -1);
    }


    function BtnResetConfigGrid() {

        N_Grid_Reset_Config_Headers(theGridCus);        

    }

</script>
