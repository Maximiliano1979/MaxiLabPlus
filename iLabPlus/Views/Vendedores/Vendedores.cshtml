@model IEnumerable<iLabPlus.Models.BDiLabPlus.Vendedores>

@{
    ViewBag.Title = "Vendedores";


    var actions = ViewBag.Actions;

}


<script id="template1" type="text/template">
    <div class="dropdown">
        <button class="dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="glyphicon glyphicon-option-vertical"></i>
        </button>
        <div class="dropdown-menu" id="dropdownMenuItems" aria-labelledby="dropdownMenu2">
            <button class="dropdown-item" type="button">Editar</button>
            <button class="dropdown-item" type="button">Eliminar</button>
            <button class="dropdown-item" type="button">Imprimir</button>
        </div>
    </div>
</script>




<div class="row wrapper page-heading border-bottom white-bg ">
    <div class="col-3" style="padding-left:0;">
        <h3>Vendedores</h3>
    </div>

    <div class="col-9 page_heading_func">

        <button id="BtnVendedorNew" type="button" class="btn btn-default" onclick="BtnDialogVendedorNew()"><i class="far fa-fw fa-plus"></i></button>

        <p id="gridSearch" style="width:300px;"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></p>


        <div class="btn-group ">
            <button type="button" class="btn btn-default  dropdown-toggle " data-toggle="dropdown">
                <i class="far fa-fw fa-print"></i>
            </button>
            <ul class="dropdown-menu dropdown-menu-right ">

                <li><a data-action="import" data-key="clientes"><i class="fal fa-fw fa-file-pdf"></i> &nbsp;&nbsp;&nbsp;Informe de vendedores 1</a></li>
                @*<li role="separator" class="divider"></li>*@
                <li><a class="btnexportst" data-output="excel" data-esort="0-stringasc"><i class="fal fa-fw fa-table"></i> &nbsp;&nbsp;&nbsp;Informe de vendedores Seleccionados Excel</a></li>
                <li><a class="btnexportst" data-output="pdf" data-esort="0-stringasc"><i class="fal fa-fw fa-file-pdf"></i> &nbsp;&nbsp;&nbsp;Informe de vendedores 3</a></li>
                <li><a class="btnexportst" data-output="pdf" data-esort="0-stringasc"><i class="fal fa-fw fa-file-pdf"></i> &nbsp;&nbsp;&nbsp;Informe de vendedores 4</a></li>
                <li><a class="btnexportst" data-output="pdf" data-esort="0-stringasc"><i class="fal fa-fw fa-file-pdf"></i> &nbsp;&nbsp;&nbsp;Informe de vendedores 5</a></li>
            </ul>
        </div>

        <div class="btn-group ">
            <button type="button" class="btn btn-default  dropdown-toggle " data-toggle="dropdown">
                <i class="far fa-fw fa-ellipsis-v"></i>
            </button>
            <ul class="dropdown-menu dropdown-menu-right ">

                <li><a data-action="import" data-key="clientes"><i class="fal fa-fw fa-cloud-upload"></i> &nbsp;&nbsp;&nbsp;Importar vendedores</a></li>
                <li role="separator" class="divider"></li>
                <li><a class="btnexportst" data-output="excel" data-esort="0-stringasc"><i class="fal fa-fw fa-share-square"></i> &nbsp;&nbsp;&nbsp;Exportar Excel</a></li>
                <li><a class="btnexportst" data-output="pdf" data-esort="0-stringasc"><i class="fal fa-fw fa-file-pdf"></i> &nbsp;&nbsp;&nbsp;Exportar PDF</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="btnexportst" data-output="pdf" data-esort="0-stringasc" onclick="BtnResetConfigGrid()"><i class="fal fa-fw fa-sd-card"></i> &nbsp;&nbsp;&nbsp;Reiniciar configuración grid</a></li>
            </ul>
        </div>

    </div>

</div>

<div class="row wrapper wrapper-content  ">
    <div class="ibox-content">

        @(Html.C1().FlexGrid()
                        .Id("gridVendedores")
                        //.AutoGenerateColumns(true)
                        .AlternatingRowStep(0)
                        .AllowDragging(C1.Web.Mvc.Grid.AllowDragging.Columns)
                        .AllowPinning(true)
                        .AutoSizeMode(AutoSizeMode.Both)
                        .AutoScroll(false)
                        .AutoSearch(true)
                        .CssClass("flexgrid GridEvents")
                        .DefaultRowSize(27)
                        .Filterable(f => {
                            f.DefaultFilterType(FilterType.Both);
                            f.Id("theGridFilter");
                        })
                        .HeadersVisibility(HeadersVisibility.Column)
                        //.IsDisabled(true)
                        .IsReadOnly(true)
                        .SelectionMode(C1.Web.Mvc.Grid.SelectionMode.Row)
                        //.ShowColumnFooters(true)
                        .SortingType(C1.Web.Mvc.Grid.AllowSorting.SingleColumn)
                        .Bind(Model)
                        .AutoGenerateColumns(false)
                        //.FrozenColumns(2)
                        .OrderBy("Vendedor")
                        .FrozenColumns((int)@ViewBag.ColumnsPinnedUser)
                        .ColumnLayout((string)@ViewBag.ColumnsLayoutUser)
                        .Columns(col =>
                        {
                            col.Add(c => c.Binding("Guid").Header("Guid").Width("100").Visible(false));                            

                            col.Add(c => c.Binding("Vendedor").Header("Vendedor").Width("120"));
                            col.Add(c => c.Binding("VenNombre").Header("Nombre").Width("270"));
                            col.Add(c => c.Binding("VenNIF").Header("Nif").Width("100"));
                            col.Add(c => c.Binding("VenMail").Header("Mail").Width("170"));
                            col.Add(c => c.Binding("VenTelefono1").Header("Teléfono").Width("170"));

                            col.Add(c => c.Binding("VenComisionEtiqueta").Header("Com. Etq").Width("150").Align("right").Format("n2"));
                            col.Add(c => c.Binding("VenComisionHechura").Header("Com. Hechura").Width("150").Align("right").Format("n2"));
                            col.Add(c => c.Binding("VenComisionPeso").Header("Com. Peso").Width("150").Align("right").Format("n2"));
                            col.Add(c => c.Binding("VenComisionPesoHechura").Header("Com. PesoHechura").Width("150").Align("right").Format("n2"));

                            col.Add(c => c.Binding("VenTelefono2").Header("Teléfono 2").Width("170"));
                            col.Add(c => c.Binding("VenTelefono3").Header("Teléfono 3").Width("170"));

                            col.Add(c => c.Binding("VenIVA").Header("Iva").Width("150").Align("right").Format("n2"));
                            col.Add(c => c.Binding("VenIRPF").Header("IRPF").Width("150").Align("right").Format("n2"));

                            col.Add(c => c.Binding("VenDireccion").Header("Dirección ").Width("300"));
                            col.Add(c => c.Binding("VenDirDP").Header("Código Postal ").Width("200"));
                            col.Add(c => c.Binding("VenDirPoblacion").Header("Población ").Width("200"));
                            col.Add(c => c.Binding("VenDirProvincia").Header("Provincia ").Width("200"));
                            col.Add(c => c.Binding("VenDirPais").Header("País ").Width("200"));

                            col.Add(c => c.Binding("IsoUser").Header("IsoUser").Width("130"));
                            col.Add(c => c.Binding("IsoFecAlt").Header("Iso Fecha Alta").Width("200").Format("dd-MM-yyyy HH:mm:ss"));
                            col.Add(c => c.Binding("IsoFecMod").Header("Iso fecha Mod.").Width("200").Format("dd-MM-yyyy HH:mm:ss"));

                        })

                        )

        @(Html.C1().FlexGridSearch("#gridSearch")
                            .Grid("gridVendedores")
                            .Delay(50)
                            .CssMatch("underline-match")
                            .Placeholder(string.Format("{0}", Html.Raw("Buscar...")))
                            )

    </div>
</div>



<script>

    $(document).ready(function () {

    });

    var theGridCus = wijmo.Control.getControl("#gridVendedores");
    if (theGridCus) {
        theGridCus.select(-1, -1);
    }


    function BtnDialogVendedorNew() {

        N_DialogVendedor("New").then((res) => {
            N_Grid_Data_Add(wijmo.Control.getControl("#gridVendedores"), res);            
        }).catch((error) => {
        });

    }

    function BtnResetConfigGrid() {
        N_Grid_Reset_Config_Headers(theGridCus);        
    }

</script>
