@model IEnumerable<iLabPlus.Models.BDiLabPlus.LeyAntiFraude112021>

@{
    ViewBag.Title = "Ley AntiFraude 112021";


    var actions = ViewBag.Actions;

}





<div class="row wrapper page-heading border-bottom white-bg ">
    <div class="col-8" style="padding-left:0;">
        <h3>Ley AntiFraude 11/2021 (Medidas de prevención y lucha contra el fraude fiscal)</h3>
    </div>

    <div class="col-4 page_heading_func">


        <p id="gridSearch" style="width:300px;"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></p>



        <div class="btn-group ">
            <button type="button" class="btn btn-default  dropdown-toggle " data-toggle="dropdown">
                <i class="far fa-fw fa-ellipsis-v"></i>
            </button>
            <ul class="dropdown-menu dropdown-menu-right ">

                <li><a class="btnexportst" data-output="excel" data-esort="0-stringasc"><i class="fal fa-fw fa-share-square"></i> &nbsp;&nbsp;&nbsp;Exportar Excel</a></li>
                <li><a class="btnexportst" data-output="pdf" data-esort="0-stringasc"><i class="fal fa-fw fa-file-pdf"></i> &nbsp;&nbsp;&nbsp;Exportar PDF</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="btnexportst" data-output="pdf" data-esort="0-stringasc" onclick="BtnResetConfigGrid()"><i class="fal fa-fw fa-sd-card"></i> &nbsp;&nbsp;&nbsp;Reiniciar configuración grid</a></li>
            </ul>
        </div>

    </div>

</div>

<div class="row wrapper wrapper-content  ">
    <div class="ibox-content">

        @(Html.C1().FlexGrid()
                        .Id("gridLeyAntiFraude")
                        //.AutoGenerateColumns(true)
                        .AlternatingRowStep(0)
                        .AllowDragging(C1.Web.Mvc.Grid.AllowDragging.Columns)
                        .AllowPinning(true)
                        .AutoSizeMode(AutoSizeMode.Both)
                        .AutoScroll(false)
                        .AutoSearch(true)
                        .CssClass("flexgrid GridEvents")
                        .DefaultRowSize(27)
                        .Filterable(f => {
                            f.DefaultFilterType(FilterType.Both);
                            f.Id("theGridFilter");
                        })
                        .HeadersVisibility(HeadersVisibility.Column)
                        //.IsDisabled(true)
                        .IsReadOnly(true)
                        .SelectionMode(C1.Web.Mvc.Grid.SelectionMode.Row)
                        //.ShowColumnFooters(true)
                        .SortingType(C1.Web.Mvc.Grid.AllowSorting.SingleColumn)
                        .Bind(Model)
                        .AutoGenerateColumns(false)

                        .FrozenColumns((int)@ViewBag.ColumnsPinnedUser)
                        .ColumnLayout((string)@ViewBag.ColumnsLayoutUser)
                        .Columns(col =>
                        {
                            col.Add(c => c.Binding("Guid").Header("Guid").Width("100").Visible(false));

                            col.Add(c => c.Binding("FechaReg").Header("Fecha").Width("160").Format("dd-MM-yyyy HH:mm:ss"));

                            col.Add(c => c.Binding("Usuario").Header("Usuario").Width("180"));

                            col.Add(c => c.Binding("Accion").Header("Accion").Width("100"));

                            col.Add(c => c.Binding("Tipo").Header("Tipo").Width("140"));

                            col.Add(c => c.Binding("Motivo").Header("Motivo").Width("300"));
                            col.Add(c => c.Binding("Documento").Header("Documento").Width("140"));

                            col.Add(c => c.Binding("RegistroOld").Header("Registro Antiguo").Width("350"));
                            col.Add(c => c.Binding("RegistroNew").Header("Registro Nuevo").Width("350*"));




                        })
                        )

                        @(Html.C1().FlexGridSearch("#gridSearch")
                            .Grid("gridLeyAntiFraude")
                            .Delay(50)
                            .CssMatch("underline-match")
                            .Placeholder(string.Format("{0}", Html.Raw("Buscar...")))
                            )

    </div>
</div>



<script>

    $(document).ready(function () {



    });

    var theGridLA = wijmo.Control.getControl("#gridLeyAntiFraude");
    if (theGridLA) {
        theGridLA.select(-1, -1);

        // Formato Celdas
        theGridLA.formatItem.addHandler(function (s, e) {

            if (s.rows.length > 0) {

                var row     = s.rows[e.row]._data;
                var item    = s.rows[e.row].dataItem;

                if (e.panel === s.cells && s.columns[e.col].binding === 'RegistroOld') {
                    if (item.RegistroOld != null && item.RegistroOld != "") {
                        let obj = JSON.parse(item.RegistroOld);
                        delete obj.Guid;
                        delete obj.Empresa;
                        let NewJsonString = JSON.stringify(obj);
                        e.cell.innerHTML = NewJsonString.substring(0, 45) + "...";
                        //e.cell.innerHTML = item.RegistroOld.substring(0, 45) + "...";
                    }                    
                }

                if (e.panel === s.cells && s.columns[e.col].binding === 'RegistroNew') {
                    if (item.RegistroNew != null && item.RegistroNew != "") {
                        let obj = JSON.parse(item.RegistroNew);
                        delete obj.Guid;
                        delete obj.Empresa;
                        let NewJsonString = JSON.stringify(obj);
                        e.cell.innerHTML = NewJsonString.substring(0, 45) + "...";
                        //e.cell.innerHTML = item.RegistroNew.substring(0, 45) + "...";
                    }      
                }

            }


        });


    }


    function BtnResetConfigGrid() {

        N_Grid_Reset_Config_Headers(theGridCus);        

    }

</script>
