@model IEnumerable<iLabPlus.Models.BDiLabPlus.ValSys>

@{
    ViewBag.Title = "Valores de sistema";


    var actions = ViewBag.Actions;

}



<div class="row wrapper page-heading border-bottom white-bg ">
    <div class="col-3" style="padding-left:0;">
        <h3>Valores de sistema</h3>
    </div>

    <div class="col-9 page_heading_func">

        <button id="BtnClienteNew" type="button" class="btn btn-default" onclick="BtnDialogValsysNew()"><i class="far fa-fw fa-plus"></i></button>

        <p id="gridSearch" style="width:300px;"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></p>

        <div class="btn-group ">
            <button type="button" class="btn btn-default  dropdown-toggle " data-toggle="dropdown">
                <i class="far fa-fw fa-ellipsis-v"></i>
            </button>
            <ul class="dropdown-menu dropdown-menu-right ">

                @*<li><a data-action="import" data-key="clientes"><i class="fal fa-fw fa-cloud-upload"></i> &nbsp;&nbsp;&nbsp;Importar clientes</a></li>
                <li role="separator" class="divider"></li>*@
                <li><a class="btnexportst" data-output="excel" data-esort="0-stringasc"><i class="fal fa-fw fa-share-square"></i> &nbsp;&nbsp;&nbsp;Exportar Excel</a></li>
                <li><a class="btnexportst" data-output="pdf" data-esort="0-stringasc"><i class="fal fa-fw fa-file-pdf"></i> &nbsp;&nbsp;&nbsp;Exportar PDF</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="btnexportst" data-output="pdf" data-esort="0-stringasc" onclick="BtnResetConfigGrid()"><i class="fal fa-fw fa-sd-card"></i> &nbsp;&nbsp;&nbsp;Reiniciar configuración grid</a></li>
            </ul>
        </div>

    </div>

</div>

<div class="row wrapper wrapper-content  ">
    <div class="ibox-content">

        @(Html.C1().FlexGrid()
                        .Id("gridValsys")
                        //.AutoGenerateColumns(true)
                        .AlternatingRowStep(0)
                        .AllowDragging(C1.Web.Mvc.Grid.AllowDragging.Columns)
                        .AllowPinning(true)
                        .AutoSizeMode(AutoSizeMode.Both)
                        .AutoScroll(false)
                        .AutoSearch(true)
                        .CssClass("flexgrid GridEvents")
                        .DefaultRowSize(27)
                        .Filterable(f => {
                            f.DefaultFilterType(FilterType.Both);
                            f.Id("theGridFilter");
                        })
                        .HeadersVisibility(HeadersVisibility.Column)
                        //.IsDisabled(true)
                        .IsReadOnly(true)
                        .SelectionMode(C1.Web.Mvc.Grid.SelectionMode.Row)
                        //.ShowColumnFooters(true)
                        .SortingType(C1.Web.Mvc.Grid.AllowSorting.SingleColumn)
                        .Bind(Model)
                        .AutoGenerateColumns(false)
                        //.FrozenColumns(2)
                        .OrderBy("Indice")
                        .FrozenColumns((int)@ViewBag.ColumnsPinnedUser)
                        .ColumnLayout((string)@ViewBag.ColumnsLayoutUser)
                        .Columns(col =>
                        {
                            col.Add(c => c.Binding("Guid").Header("Guid").Width("100").Visible(false));

                            col.Add(c => c.Binding("Indice").Header("Indice").Width("230"));
                            col.Add(c => c.Binding("Clave").Header("Clave").Width("230"));
                            col.Add(c => c.Binding("Valor1").Header("Valor1").Width("230"));
                            col.Add(c => c.Binding("Valor2").Header("Valor2").Width("200"));
                            col.Add(c => c.Binding("Valor3").Header("Valor3").Width("200"));
                            col.Add(c => c.Binding("Valor4").Header("Valor4").Align("right").Format("n5").Width("200"));


                            col.Add(c => c.Binding("IsoUser").Header("IsoUser").Width("130"));
                            col.Add(c => c.Binding("IsoFecAlt").Header("Iso Fecha Alta").Width("200").Format("dd-MM-yyyy HH:mm:ss"));
                            col.Add(c => c.Binding("IsoFecMod").Header("Iso fecha Mod.").Width("200*").Format("dd-MM-yyyy HH:mm:ss"));

                        })

                        )

        @(Html.C1().FlexGridSearch("#gridSearch")
                            .Grid("gridValsys")
                            .Delay(50)
                            .CssMatch("underline-match")
                            .Placeholder(string.Format("{0}", Html.Raw("Buscar...")))
                            )

    </div>
</div>



<script>

    $(document).ready(function () {



    });

    var theGridVal = wijmo.Control.getControl("#gridValsys");
    if (theGridVal) {

        // Clear selection of grid
        theGridVal.select(-1, -1);
    }



    function BtnDialogValsysNew() {

        N_DialogValsys("New").then((res) => {

            N_Grid_Data_Add(wijmo.Control.getControl("#gridValsys"), res);
            
        }).catch((error) => {

        });

    }

    function BtnResetConfigGrid() {

        N_Grid_Reset_Config_Headers(theGridVal);

    }

</script>
